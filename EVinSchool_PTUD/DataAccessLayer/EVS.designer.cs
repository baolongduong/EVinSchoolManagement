#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StudentManagementDB")]
	public partial class EVSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertAttendance(Attendance instance);
    partial void UpdateAttendance(Attendance instance);
    partial void DeleteAttendance(Attendance instance);
    partial void InsertClassification(Classification instance);
    partial void UpdateClassification(Classification instance);
    partial void DeleteClassification(Classification instance);
    partial void InsertClassroom(Classroom instance);
    partial void UpdateClassroom(Classroom instance);
    partial void DeleteClassroom(Classroom instance);
    partial void InsertFoodSchedule(FoodSchedule instance);
    partial void UpdateFoodSchedule(FoodSchedule instance);
    partial void DeleteFoodSchedule(FoodSchedule instance);
    partial void InsertMark(Mark instance);
    partial void UpdateMark(Mark instance);
    partial void DeleteMark(Mark instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertStudySchedule(StudySchedule instance);
    partial void UpdateStudySchedule(StudySchedule instance);
    partial void DeleteStudySchedule(StudySchedule instance);
    partial void InsertSubject(Subject instance);
    partial void UpdateSubject(Subject instance);
    partial void DeleteSubject(Subject instance);
    #endregion
		
		public EVSDataContext() : 
				base(global::DataAccessLayer.Properties.Settings.Default.StudentManagementDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public EVSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EVSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EVSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EVSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Attendance> Attendances
		{
			get
			{
				return this.GetTable<Attendance>();
			}
		}
		
		public System.Data.Linq.Table<Classification> Classifications
		{
			get
			{
				return this.GetTable<Classification>();
			}
		}
		
		public System.Data.Linq.Table<Classroom> Classrooms
		{
			get
			{
				return this.GetTable<Classroom>();
			}
		}
		
		public System.Data.Linq.Table<FoodSchedule> FoodSchedules
		{
			get
			{
				return this.GetTable<FoodSchedule>();
			}
		}
		
		public System.Data.Linq.Table<Mark> Marks
		{
			get
			{
				return this.GetTable<Mark>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<StudySchedule> StudySchedules
		{
			get
			{
				return this.GetTable<StudySchedule>();
			}
		}
		
		public System.Data.Linq.Table<Subject> Subjects
		{
			get
			{
				return this.GetTable<Subject>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeacherId;
		
		private string _TeacherEmail;
		
		private string _TeacherPassword;
		
		private string _TeacherName;
		
		private System.Nullable<int> _TeacherClass;
		
		private string _TeacherImage;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntityRef<Classroom> _Classroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacherIdChanging(int value);
    partial void OnTeacherIdChanged();
    partial void OnTeacherEmailChanging(string value);
    partial void OnTeacherEmailChanged();
    partial void OnTeacherPasswordChanging(string value);
    partial void OnTeacherPasswordChanged();
    partial void OnTeacherNameChanging(string value);
    partial void OnTeacherNameChanged();
    partial void OnTeacherClassChanging(System.Nullable<int> value);
    partial void OnTeacherClassChanged();
    partial void OnTeacherImageChanging(string value);
    partial void OnTeacherImageChanged();
    #endregion
		
		public Teacher()
		{
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._Classroom = default(EntityRef<Classroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherEmail", DbType="VarChar(50)")]
		public string TeacherEmail
		{
			get
			{
				return this._TeacherEmail;
			}
			set
			{
				if ((this._TeacherEmail != value))
				{
					this.OnTeacherEmailChanging(value);
					this.SendPropertyChanging();
					this._TeacherEmail = value;
					this.SendPropertyChanged("TeacherEmail");
					this.OnTeacherEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherPassword", DbType="VarChar(50)")]
		public string TeacherPassword
		{
			get
			{
				return this._TeacherPassword;
			}
			set
			{
				if ((this._TeacherPassword != value))
				{
					this.OnTeacherPasswordChanging(value);
					this.SendPropertyChanging();
					this._TeacherPassword = value;
					this.SendPropertyChanged("TeacherPassword");
					this.OnTeacherPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="NVarChar(100)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this.OnTeacherNameChanging(value);
					this.SendPropertyChanging();
					this._TeacherName = value;
					this.SendPropertyChanged("TeacherName");
					this.OnTeacherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherClass", DbType="Int")]
		public System.Nullable<int> TeacherClass
		{
			get
			{
				return this._TeacherClass;
			}
			set
			{
				if ((this._TeacherClass != value))
				{
					if (this._Classroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherClassChanging(value);
					this.SendPropertyChanging();
					this._TeacherClass = value;
					this.SendPropertyChanged("TeacherClass");
					this.OnTeacherClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherImage", DbType="VarChar(MAX)")]
		public string TeacherImage
		{
			get
			{
				return this._TeacherImage;
			}
			set
			{
				if ((this._TeacherImage != value))
				{
					this.OnTeacherImageChanging(value);
					this.SendPropertyChanging();
					this._TeacherImage = value;
					this.SendPropertyChanged("TeacherImage");
					this.OnTeacherImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Attendance", Storage="_Attendances", ThisKey="TeacherId", OtherKey="AttendanceTeacher")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_Teacher", Storage="_Classroom", ThisKey="TeacherClass", OtherKey="ClassId", IsForeignKey=true)]
		public Classroom Classroom
		{
			get
			{
				return this._Classroom.Entity;
			}
			set
			{
				Classroom previousValue = this._Classroom.Entity;
				if (((previousValue != value) 
							|| (this._Classroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classroom.Entity = null;
						previousValue.Teachers.Remove(this);
					}
					this._Classroom.Entity = value;
					if ((value != null))
					{
						value.Teachers.Add(this);
						this._TeacherClass = value.ClassId;
					}
					else
					{
						this._TeacherClass = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _AdminEmail;
		
		private string _AdminPassword;
		
		private string _AdminName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnAdminEmailChanging(string value);
    partial void OnAdminEmailChanged();
    partial void OnAdminPasswordChanging(string value);
    partial void OnAdminPasswordChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminEmail", DbType="VarChar(MAX)")]
		public string AdminEmail
		{
			get
			{
				return this._AdminEmail;
			}
			set
			{
				if ((this._AdminEmail != value))
				{
					this.OnAdminEmailChanging(value);
					this.SendPropertyChanging();
					this._AdminEmail = value;
					this.SendPropertyChanged("AdminEmail");
					this.OnAdminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPassword", DbType="VarChar(MAX)")]
		public string AdminPassword
		{
			get
			{
				return this._AdminPassword;
			}
			set
			{
				if ((this._AdminPassword != value))
				{
					this.OnAdminPasswordChanging(value);
					this.SendPropertyChanging();
					this._AdminPassword = value;
					this.SendPropertyChanged("AdminPassword");
					this.OnAdminPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="NVarChar(100)")]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this.OnAdminNameChanging(value);
					this.SendPropertyChanging();
					this._AdminName = value;
					this.SendPropertyChanged("AdminName");
					this.OnAdminNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attendance")]
	public partial class Attendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttendanceId;
		
		private System.Nullable<System.DateTime> _AttendanceDate;
		
		private System.Nullable<int> _AttendanceClass;
		
		private System.Nullable<int> _AttendanceStudent;
		
		private System.Nullable<int> _AttendanceTeacher;
		
		private System.Nullable<bool> _AttendanceStatus;
		
		private System.Nullable<int> _CheckAttendance;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<Teacher> _Teacher;
		
		private EntityRef<Classroom> _Classroom;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttendanceIdChanging(int value);
    partial void OnAttendanceIdChanged();
    partial void OnAttendanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAttendanceDateChanged();
    partial void OnAttendanceClassChanging(System.Nullable<int> value);
    partial void OnAttendanceClassChanged();
    partial void OnAttendanceStudentChanging(System.Nullable<int> value);
    partial void OnAttendanceStudentChanged();
    partial void OnAttendanceTeacherChanging(System.Nullable<int> value);
    partial void OnAttendanceTeacherChanged();
    partial void OnAttendanceStatusChanging(System.Nullable<bool> value);
    partial void OnAttendanceStatusChanged();
    partial void OnCheckAttendanceChanging(System.Nullable<int> value);
    partial void OnCheckAttendanceChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Attendance()
		{
			this._Teacher = default(EntityRef<Teacher>);
			this._Classroom = default(EntityRef<Classroom>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttendanceId
		{
			get
			{
				return this._AttendanceId;
			}
			set
			{
				if ((this._AttendanceId != value))
				{
					this.OnAttendanceIdChanging(value);
					this.SendPropertyChanging();
					this._AttendanceId = value;
					this.SendPropertyChanged("AttendanceId");
					this.OnAttendanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceDate", DbType="Date")]
		public System.Nullable<System.DateTime> AttendanceDate
		{
			get
			{
				return this._AttendanceDate;
			}
			set
			{
				if ((this._AttendanceDate != value))
				{
					this.OnAttendanceDateChanging(value);
					this.SendPropertyChanging();
					this._AttendanceDate = value;
					this.SendPropertyChanged("AttendanceDate");
					this.OnAttendanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceClass", DbType="Int")]
		public System.Nullable<int> AttendanceClass
		{
			get
			{
				return this._AttendanceClass;
			}
			set
			{
				if ((this._AttendanceClass != value))
				{
					if (this._Classroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendanceClassChanging(value);
					this.SendPropertyChanging();
					this._AttendanceClass = value;
					this.SendPropertyChanged("AttendanceClass");
					this.OnAttendanceClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceStudent", DbType="Int")]
		public System.Nullable<int> AttendanceStudent
		{
			get
			{
				return this._AttendanceStudent;
			}
			set
			{
				if ((this._AttendanceStudent != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendanceStudentChanging(value);
					this.SendPropertyChanging();
					this._AttendanceStudent = value;
					this.SendPropertyChanged("AttendanceStudent");
					this.OnAttendanceStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceTeacher", DbType="Int")]
		public System.Nullable<int> AttendanceTeacher
		{
			get
			{
				return this._AttendanceTeacher;
			}
			set
			{
				if ((this._AttendanceTeacher != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendanceTeacherChanging(value);
					this.SendPropertyChanging();
					this._AttendanceTeacher = value;
					this.SendPropertyChanged("AttendanceTeacher");
					this.OnAttendanceTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceStatus", DbType="Bit")]
		public System.Nullable<bool> AttendanceStatus
		{
			get
			{
				return this._AttendanceStatus;
			}
			set
			{
				if ((this._AttendanceStatus != value))
				{
					this.OnAttendanceStatusChanging(value);
					this.SendPropertyChanging();
					this._AttendanceStatus = value;
					this.SendPropertyChanged("AttendanceStatus");
					this.OnAttendanceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckAttendance", DbType="Int")]
		public System.Nullable<int> CheckAttendance
		{
			get
			{
				return this._CheckAttendance;
			}
			set
			{
				if ((this._CheckAttendance != value))
				{
					this.OnCheckAttendanceChanging(value);
					this.SendPropertyChanging();
					this._CheckAttendance = value;
					this.SendPropertyChanged("CheckAttendance");
					this.OnCheckAttendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Attendance", Storage="_Teacher", ThisKey="AttendanceTeacher", OtherKey="TeacherId", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._AttendanceTeacher = value.TeacherId;
					}
					else
					{
						this._AttendanceTeacher = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_Attendance", Storage="_Classroom", ThisKey="AttendanceClass", OtherKey="ClassId", IsForeignKey=true)]
		public Classroom Classroom
		{
			get
			{
				return this._Classroom.Entity;
			}
			set
			{
				Classroom previousValue = this._Classroom.Entity;
				if (((previousValue != value) 
							|| (this._Classroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classroom.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._Classroom.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._AttendanceClass = value.ClassId;
					}
					else
					{
						this._AttendanceClass = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classroom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Attendance", Storage="_Student", ThisKey="AttendanceStudent", OtherKey="StudentId", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._AttendanceStudent = value.StudentId;
					}
					else
					{
						this._AttendanceStudent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classification")]
	public partial class Classification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClasstificationID;
		
		private System.Nullable<int> _StudentId;
		
		private System.Nullable<decimal> _TotalMark;
		
		private string _ClassificationResult;
		
		private System.Nullable<decimal> _Math;
		
		private System.Nullable<decimal> _Vietnamese;
		
		private System.Nullable<decimal> _English;
		
		private System.Nullable<decimal> _Morality;
		
		private System.Nullable<decimal> _NatureSocial;
		
		private System.Nullable<decimal> _HistoryGeography;
		
		private System.Nullable<decimal> _Music;
		
		private System.Nullable<decimal> _Sports;
		
		private System.Nullable<decimal> _Arts;
		
		private System.Nullable<decimal> _AttendanceClass;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClasstificationIDChanging(int value);
    partial void OnClasstificationIDChanged();
    partial void OnStudentIdChanging(System.Nullable<int> value);
    partial void OnStudentIdChanged();
    partial void OnTotalMarkChanging(System.Nullable<decimal> value);
    partial void OnTotalMarkChanged();
    partial void OnClassificationResultChanging(string value);
    partial void OnClassificationResultChanged();
    partial void OnMathChanging(System.Nullable<decimal> value);
    partial void OnMathChanged();
    partial void OnVietnameseChanging(System.Nullable<decimal> value);
    partial void OnVietnameseChanged();
    partial void OnEnglishChanging(System.Nullable<decimal> value);
    partial void OnEnglishChanged();
    partial void OnMoralityChanging(System.Nullable<decimal> value);
    partial void OnMoralityChanged();
    partial void OnNatureSocialChanging(System.Nullable<decimal> value);
    partial void OnNatureSocialChanged();
    partial void OnHistoryGeographyChanging(System.Nullable<decimal> value);
    partial void OnHistoryGeographyChanged();
    partial void OnMusicChanging(System.Nullable<decimal> value);
    partial void OnMusicChanged();
    partial void OnSportsChanging(System.Nullable<decimal> value);
    partial void OnSportsChanged();
    partial void OnArtsChanging(System.Nullable<decimal> value);
    partial void OnArtsChanged();
    partial void OnAttendanceClassChanging(System.Nullable<decimal> value);
    partial void OnAttendanceClassChanged();
    #endregion
		
		public Classification()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClasstificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClasstificationID
		{
			get
			{
				return this._ClasstificationID;
			}
			set
			{
				if ((this._ClasstificationID != value))
				{
					this.OnClasstificationIDChanging(value);
					this.SendPropertyChanging();
					this._ClasstificationID = value;
					this.SendPropertyChanged("ClasstificationID");
					this.OnClasstificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int")]
		public System.Nullable<int> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMark", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> TotalMark
		{
			get
			{
				return this._TotalMark;
			}
			set
			{
				if ((this._TotalMark != value))
				{
					this.OnTotalMarkChanging(value);
					this.SendPropertyChanging();
					this._TotalMark = value;
					this.SendPropertyChanged("TotalMark");
					this.OnTotalMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationResult", DbType="NVarChar(20)")]
		public string ClassificationResult
		{
			get
			{
				return this._ClassificationResult;
			}
			set
			{
				if ((this._ClassificationResult != value))
				{
					this.OnClassificationResultChanging(value);
					this.SendPropertyChanging();
					this._ClassificationResult = value;
					this.SendPropertyChanged("ClassificationResult");
					this.OnClassificationResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Math", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> Math
		{
			get
			{
				return this._Math;
			}
			set
			{
				if ((this._Math != value))
				{
					this.OnMathChanging(value);
					this.SendPropertyChanging();
					this._Math = value;
					this.SendPropertyChanged("Math");
					this.OnMathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vietnamese", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> Vietnamese
		{
			get
			{
				return this._Vietnamese;
			}
			set
			{
				if ((this._Vietnamese != value))
				{
					this.OnVietnameseChanging(value);
					this.SendPropertyChanging();
					this._Vietnamese = value;
					this.SendPropertyChanged("Vietnamese");
					this.OnVietnameseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_English", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> English
		{
			get
			{
				return this._English;
			}
			set
			{
				if ((this._English != value))
				{
					this.OnEnglishChanging(value);
					this.SendPropertyChanging();
					this._English = value;
					this.SendPropertyChanged("English");
					this.OnEnglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morality", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> Morality
		{
			get
			{
				return this._Morality;
			}
			set
			{
				if ((this._Morality != value))
				{
					this.OnMoralityChanging(value);
					this.SendPropertyChanging();
					this._Morality = value;
					this.SendPropertyChanged("Morality");
					this.OnMoralityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatureSocial", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> NatureSocial
		{
			get
			{
				return this._NatureSocial;
			}
			set
			{
				if ((this._NatureSocial != value))
				{
					this.OnNatureSocialChanging(value);
					this.SendPropertyChanging();
					this._NatureSocial = value;
					this.SendPropertyChanged("NatureSocial");
					this.OnNatureSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryGeography", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> HistoryGeography
		{
			get
			{
				return this._HistoryGeography;
			}
			set
			{
				if ((this._HistoryGeography != value))
				{
					this.OnHistoryGeographyChanging(value);
					this.SendPropertyChanging();
					this._HistoryGeography = value;
					this.SendPropertyChanged("HistoryGeography");
					this.OnHistoryGeographyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> Music
		{
			get
			{
				return this._Music;
			}
			set
			{
				if ((this._Music != value))
				{
					this.OnMusicChanging(value);
					this.SendPropertyChanging();
					this._Music = value;
					this.SendPropertyChanged("Music");
					this.OnMusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sports", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> Sports
		{
			get
			{
				return this._Sports;
			}
			set
			{
				if ((this._Sports != value))
				{
					this.OnSportsChanging(value);
					this.SendPropertyChanging();
					this._Sports = value;
					this.SendPropertyChanged("Sports");
					this.OnSportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arts", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> Arts
		{
			get
			{
				return this._Arts;
			}
			set
			{
				if ((this._Arts != value))
				{
					this.OnArtsChanging(value);
					this.SendPropertyChanging();
					this._Arts = value;
					this.SendPropertyChanged("Arts");
					this.OnArtsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceClass", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> AttendanceClass
		{
			get
			{
				return this._AttendanceClass;
			}
			set
			{
				if ((this._AttendanceClass != value))
				{
					this.OnAttendanceClassChanging(value);
					this.SendPropertyChanging();
					this._AttendanceClass = value;
					this.SendPropertyChanged("AttendanceClass");
					this.OnAttendanceClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Classification", Storage="_Student", ThisKey="StudentId", OtherKey="StudentId", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Classifications.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Classifications.Add(this);
						this._StudentId = value.StudentId;
					}
					else
					{
						this._StudentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classroom")]
	public partial class Classroom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassId;
		
		private string _ClassName;
		
		private EntitySet<Teacher> _Teachers;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntitySet<FoodSchedule> _FoodSchedules;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<StudySchedule> _StudySchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIdChanging(int value);
    partial void OnClassIdChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    #endregion
		
		public Classroom()
		{
			this._Teachers = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teachers), new Action<Teacher>(this.detach_Teachers));
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._FoodSchedules = new EntitySet<FoodSchedule>(new Action<FoodSchedule>(this.attach_FoodSchedules), new Action<FoodSchedule>(this.detach_FoodSchedules));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._StudySchedules = new EntitySet<StudySchedule>(new Action<StudySchedule>(this.attach_StudySchedules), new Action<StudySchedule>(this.detach_StudySchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(10)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_Teacher", Storage="_Teachers", ThisKey="ClassId", OtherKey="TeacherClass")]
		public EntitySet<Teacher> Teachers
		{
			get
			{
				return this._Teachers;
			}
			set
			{
				this._Teachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_Attendance", Storage="_Attendances", ThisKey="ClassId", OtherKey="AttendanceClass")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_FoodSchedule", Storage="_FoodSchedules", ThisKey="ClassId", OtherKey="ClassId")]
		public EntitySet<FoodSchedule> FoodSchedules
		{
			get
			{
				return this._FoodSchedules;
			}
			set
			{
				this._FoodSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_Student", Storage="_Students", ThisKey="ClassId", OtherKey="StudentClass")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_StudySchedule", Storage="_StudySchedules", ThisKey="ClassId", OtherKey="ClassID")]
		public EntitySet<StudySchedule> StudySchedules
		{
			get
			{
				return this._StudySchedules;
			}
			set
			{
				this._StudySchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = this;
		}
		
		private void detach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = null;
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = null;
		}
		
		private void attach_FoodSchedules(FoodSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = this;
		}
		
		private void detach_FoodSchedules(FoodSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = null;
		}
		
		private void attach_StudySchedules(StudySchedule entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = this;
		}
		
		private void detach_StudySchedules(StudySchedule entity)
		{
			this.SendPropertyChanging();
			entity.Classroom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodSchedule")]
	public partial class FoodSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FoodId;
		
		private string _FoodName;
		
		private System.Nullable<System.DateTime> _FoodDate;
		
		private System.Nullable<int> _ClassId;
		
		private System.Nullable<System.DateTime> _FoodClassTime;
		
		private EntityRef<Classroom> _Classroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodIdChanging(int value);
    partial void OnFoodIdChanged();
    partial void OnFoodNameChanging(string value);
    partial void OnFoodNameChanged();
    partial void OnFoodDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFoodDateChanged();
    partial void OnClassIdChanging(System.Nullable<int> value);
    partial void OnClassIdChanged();
    partial void OnFoodClassTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFoodClassTimeChanged();
    #endregion
		
		public FoodSchedule()
		{
			this._Classroom = default(EntityRef<Classroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FoodId
		{
			get
			{
				return this._FoodId;
			}
			set
			{
				if ((this._FoodId != value))
				{
					this.OnFoodIdChanging(value);
					this.SendPropertyChanging();
					this._FoodId = value;
					this.SendPropertyChanged("FoodId");
					this.OnFoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodName", DbType="NVarChar(50)")]
		public string FoodName
		{
			get
			{
				return this._FoodName;
			}
			set
			{
				if ((this._FoodName != value))
				{
					this.OnFoodNameChanging(value);
					this.SendPropertyChanging();
					this._FoodName = value;
					this.SendPropertyChanged("FoodName");
					this.OnFoodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodDate", DbType="Date")]
		public System.Nullable<System.DateTime> FoodDate
		{
			get
			{
				return this._FoodDate;
			}
			set
			{
				if ((this._FoodDate != value))
				{
					this.OnFoodDateChanging(value);
					this.SendPropertyChanging();
					this._FoodDate = value;
					this.SendPropertyChanged("FoodDate");
					this.OnFoodDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int")]
		public System.Nullable<int> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					if (this._Classroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodClassTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FoodClassTime
		{
			get
			{
				return this._FoodClassTime;
			}
			set
			{
				if ((this._FoodClassTime != value))
				{
					this.OnFoodClassTimeChanging(value);
					this.SendPropertyChanging();
					this._FoodClassTime = value;
					this.SendPropertyChanged("FoodClassTime");
					this.OnFoodClassTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_FoodSchedule", Storage="_Classroom", ThisKey="ClassId", OtherKey="ClassId", IsForeignKey=true)]
		public Classroom Classroom
		{
			get
			{
				return this._Classroom.Entity;
			}
			set
			{
				Classroom previousValue = this._Classroom.Entity;
				if (((previousValue != value) 
							|| (this._Classroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classroom.Entity = null;
						previousValue.FoodSchedules.Remove(this);
					}
					this._Classroom.Entity = value;
					if ((value != null))
					{
						value.FoodSchedules.Add(this);
						this._ClassId = value.ClassId;
					}
					else
					{
						this._ClassId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mark")]
	public partial class Mark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarkId;
		
		private System.Nullable<int> _SubjectId;
		
		private System.Nullable<decimal> _Score;
		
		private System.Nullable<int> _StudentId;
		
		private System.Nullable<System.DateTime> _MarkDate;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarkIdChanging(int value);
    partial void OnMarkIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<int> value);
    partial void OnSubjectIdChanged();
    partial void OnScoreChanging(System.Nullable<decimal> value);
    partial void OnScoreChanged();
    partial void OnStudentIdChanging(System.Nullable<int> value);
    partial void OnStudentIdChanged();
    partial void OnMarkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMarkDateChanged();
    #endregion
		
		public Mark()
		{
			this._Student = default(EntityRef<Student>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarkId
		{
			get
			{
				return this._MarkId;
			}
			set
			{
				if ((this._MarkId != value))
				{
					this.OnMarkIdChanging(value);
					this.SendPropertyChanging();
					this._MarkId = value;
					this.SendPropertyChanged("MarkId");
					this.OnMarkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int")]
		public System.Nullable<int> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(10,1)")]
		public System.Nullable<decimal> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int")]
		public System.Nullable<int> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkDate", DbType="Date")]
		public System.Nullable<System.DateTime> MarkDate
		{
			get
			{
				return this._MarkDate;
			}
			set
			{
				if ((this._MarkDate != value))
				{
					this.OnMarkDateChanging(value);
					this.SendPropertyChanging();
					this._MarkDate = value;
					this.SendPropertyChanged("MarkDate");
					this.OnMarkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Mark", Storage="_Student", ThisKey="StudentId", OtherKey="StudentId", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Marks.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Marks.Add(this);
						this._StudentId = value.StudentId;
					}
					else
					{
						this._StudentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_Mark", Storage="_Subject", ThisKey="SubjectId", OtherKey="SubjectId", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.Marks.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.Marks.Add(this);
						this._SubjectId = value.SubjectId;
					}
					else
					{
						this._SubjectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentId;
		
		private string _StudentName;
		
		private string _StudentAddress;
		
		private string _ParentPhone;
		
		private System.Nullable<int> _StudentClass;
		
		private string _StudentImage;
		
		private System.Nullable<System.DateTime> _StudentDOB;
		
		private string _ParentName;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntitySet<Classification> _Classifications;
		
		private EntitySet<Mark> _Marks;
		
		private EntityRef<Classroom> _Classroom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStudentAddressChanging(string value);
    partial void OnStudentAddressChanged();
    partial void OnParentPhoneChanging(string value);
    partial void OnParentPhoneChanged();
    partial void OnStudentClassChanging(System.Nullable<int> value);
    partial void OnStudentClassChanged();
    partial void OnStudentImageChanging(string value);
    partial void OnStudentImageChanged();
    partial void OnStudentDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnStudentDOBChanged();
    partial void OnParentNameChanging(string value);
    partial void OnParentNameChanged();
    #endregion
		
		public Student()
		{
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._Classifications = new EntitySet<Classification>(new Action<Classification>(this.attach_Classifications), new Action<Classification>(this.detach_Classifications));
			this._Marks = new EntitySet<Mark>(new Action<Mark>(this.attach_Marks), new Action<Mark>(this.detach_Marks));
			this._Classroom = default(EntityRef<Classroom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(50)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAddress", DbType="NVarChar(100)")]
		public string StudentAddress
		{
			get
			{
				return this._StudentAddress;
			}
			set
			{
				if ((this._StudentAddress != value))
				{
					this.OnStudentAddressChanging(value);
					this.SendPropertyChanging();
					this._StudentAddress = value;
					this.SendPropertyChanged("StudentAddress");
					this.OnStudentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPhone", DbType="VarChar(10)")]
		public string ParentPhone
		{
			get
			{
				return this._ParentPhone;
			}
			set
			{
				if ((this._ParentPhone != value))
				{
					this.OnParentPhoneChanging(value);
					this.SendPropertyChanging();
					this._ParentPhone = value;
					this.SendPropertyChanged("ParentPhone");
					this.OnParentPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentClass", DbType="Int")]
		public System.Nullable<int> StudentClass
		{
			get
			{
				return this._StudentClass;
			}
			set
			{
				if ((this._StudentClass != value))
				{
					if (this._Classroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentClassChanging(value);
					this.SendPropertyChanging();
					this._StudentClass = value;
					this.SendPropertyChanged("StudentClass");
					this.OnStudentClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentImage", DbType="VarChar(MAX)")]
		public string StudentImage
		{
			get
			{
				return this._StudentImage;
			}
			set
			{
				if ((this._StudentImage != value))
				{
					this.OnStudentImageChanging(value);
					this.SendPropertyChanging();
					this._StudentImage = value;
					this.SendPropertyChanged("StudentImage");
					this.OnStudentImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDOB", DbType="Date")]
		public System.Nullable<System.DateTime> StudentDOB
		{
			get
			{
				return this._StudentDOB;
			}
			set
			{
				if ((this._StudentDOB != value))
				{
					this.OnStudentDOBChanging(value);
					this.SendPropertyChanging();
					this._StudentDOB = value;
					this.SendPropertyChanged("StudentDOB");
					this.OnStudentDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(50)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this.OnParentNameChanging(value);
					this.SendPropertyChanging();
					this._ParentName = value;
					this.SendPropertyChanged("ParentName");
					this.OnParentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Attendance", Storage="_Attendances", ThisKey="StudentId", OtherKey="AttendanceStudent")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Classification", Storage="_Classifications", ThisKey="StudentId", OtherKey="StudentId")]
		public EntitySet<Classification> Classifications
		{
			get
			{
				return this._Classifications;
			}
			set
			{
				this._Classifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Mark", Storage="_Marks", ThisKey="StudentId", OtherKey="StudentId")]
		public EntitySet<Mark> Marks
		{
			get
			{
				return this._Marks;
			}
			set
			{
				this._Marks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_Student", Storage="_Classroom", ThisKey="StudentClass", OtherKey="ClassId", IsForeignKey=true)]
		public Classroom Classroom
		{
			get
			{
				return this._Classroom.Entity;
			}
			set
			{
				Classroom previousValue = this._Classroom.Entity;
				if (((previousValue != value) 
							|| (this._Classroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classroom.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Classroom.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._StudentClass = value.ClassId;
					}
					else
					{
						this._StudentClass = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classroom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Classifications(Classification entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Classifications(Classification entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Marks(Mark entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Marks(Mark entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudySchedule")]
	public partial class StudySchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudySID;
		
		private System.Nullable<System.DateTime> _TimeStart;
		
		private System.Nullable<int> _StudySubject;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<System.DateTime> _StudyDate;
		
		private EntityRef<Classroom> _Classroom;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudySIDChanging(int value);
    partial void OnStudySIDChanged();
    partial void OnTimeStartChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartChanged();
    partial void OnStudySubjectChanging(System.Nullable<int> value);
    partial void OnStudySubjectChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void OnClassIDChanging(System.Nullable<int> value);
    partial void OnClassIDChanged();
    partial void OnStudyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStudyDateChanged();
    #endregion
		
		public StudySchedule()
		{
			this._Classroom = default(EntityRef<Classroom>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudySID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudySID
		{
			get
			{
				return this._StudySID;
			}
			set
			{
				if ((this._StudySID != value))
				{
					this.OnStudySIDChanging(value);
					this.SendPropertyChanging();
					this._StudySID = value;
					this.SendPropertyChanged("StudySID");
					this.OnStudySIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudySubject", DbType="Int")]
		public System.Nullable<int> StudySubject
		{
			get
			{
				return this._StudySubject;
			}
			set
			{
				if ((this._StudySubject != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudySubjectChanging(value);
					this.SendPropertyChanging();
					this._StudySubject = value;
					this.SendPropertyChanged("StudySubject");
					this.OnStudySubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._Classroom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyDate", DbType="Date")]
		public System.Nullable<System.DateTime> StudyDate
		{
			get
			{
				return this._StudyDate;
			}
			set
			{
				if ((this._StudyDate != value))
				{
					this.OnStudyDateChanging(value);
					this.SendPropertyChanging();
					this._StudyDate = value;
					this.SendPropertyChanged("StudyDate");
					this.OnStudyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_StudySchedule", Storage="_Classroom", ThisKey="ClassID", OtherKey="ClassId", IsForeignKey=true)]
		public Classroom Classroom
		{
			get
			{
				return this._Classroom.Entity;
			}
			set
			{
				Classroom previousValue = this._Classroom.Entity;
				if (((previousValue != value) 
							|| (this._Classroom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classroom.Entity = null;
						previousValue.StudySchedules.Remove(this);
					}
					this._Classroom.Entity = value;
					if ((value != null))
					{
						value.StudySchedules.Add(this);
						this._ClassID = value.ClassId;
					}
					else
					{
						this._ClassID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classroom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudySchedule", Storage="_Subject", ThisKey="StudySubject", OtherKey="SubjectId", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.StudySchedules.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.StudySchedules.Add(this);
						this._StudySubject = value.SubjectId;
					}
					else
					{
						this._StudySubject = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
	public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectId;
		
		private string _SubjectName;
		
		private EntitySet<Mark> _Marks;
		
		private EntitySet<StudySchedule> _StudySchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    #endregion
		
		public Subject()
		{
			this._Marks = new EntitySet<Mark>(new Action<Mark>(this.attach_Marks), new Action<Mark>(this.detach_Marks));
			this._StudySchedules = new EntitySet<StudySchedule>(new Action<StudySchedule>(this.attach_StudySchedules), new Action<StudySchedule>(this.detach_StudySchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(50)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_Mark", Storage="_Marks", ThisKey="SubjectId", OtherKey="SubjectId")]
		public EntitySet<Mark> Marks
		{
			get
			{
				return this._Marks;
			}
			set
			{
				this._Marks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_StudySchedule", Storage="_StudySchedules", ThisKey="SubjectId", OtherKey="StudySubject")]
		public EntitySet<StudySchedule> StudySchedules
		{
			get
			{
				return this._StudySchedules;
			}
			set
			{
				this._StudySchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Marks(Mark entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_Marks(Mark entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_StudySchedules(StudySchedule entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_StudySchedules(StudySchedule entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
	}
}
#pragma warning restore 1591
